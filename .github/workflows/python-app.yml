# This workflow will install Python dependencies, run tests and lint with
# a single version of Python. For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# https://www.python.org/

name: Python application pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.12.3

    steps:
      - name: "☁️ Checkout code"
        uses: actions/checkout@v3

      - name: "🐍 Set up Python ${{ env.PYTHON_VERSION }}"
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "⬆️ Upgrade pip"
        run: python -m pip install --upgrade pip

      - name: "📦 Install flake8"
        run: pip install flake8

      - name: "📦 Install project dependencies"
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "🔎 Lint with flake8"
        run: |
          # General linting with custom configuration.
          flake8 . --count  --config=.flake8 --show-source --statistics
      - name: "☁️ Login to Docker Hub"
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_KEY }}
      - name: "🚀 Docker build and push image to hub"
        uses: docker/build-push-action@v5.3.0
        with:
          # Specify root location
          context: .
          # Specify Dockerfile location
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/cortana:latest
